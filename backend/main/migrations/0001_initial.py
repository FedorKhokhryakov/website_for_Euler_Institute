# Generated by Django 5.2.6 on 2025-09-07 10:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('article', 'Статья'), ('conference', 'Конференция'), ('book', 'Книга'), ('report', 'Отчет'), ('other', 'Другое')], max_length=20, verbose_name='Тип публикации')),
                ('tome', models.IntegerField(blank=True, null=True, verbose_name='Том')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Номер')),
                ('article_identification_number', models.CharField(blank=True, max_length=100, verbose_name='Идентификационный номер статьи')),
                ('pages', models.IntegerField(blank=True, null=True, verbose_name='Страницы')),
                ('year', models.IntegerField(verbose_name='Год публикации')),
                ('language', models.CharField(default='Русский', max_length=50, verbose_name='Язык')),
                ('web_page', models.URLField(blank=True, verbose_name='Веб-страница')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'На рассмотрении'), ('accepted', 'Принято'), ('published', 'Опубликовано'), ('rejected', 'Отклонено')], default='draft', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Принято')),
            ],
            options={
                'verbose_name': 'Публикация',
                'verbose_name_plural': 'Публикации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('laboratory', models.CharField(blank=True, max_length=100, verbose_name='Лаборатория')),
                ('year_of_birth', models.IntegerField(blank=True, null=True, verbose_name='Год рождения')),
                ('year_of_graduation', models.IntegerField(blank=True, null=True, verbose_name='Год окончания вуза')),
                ('academic_degree', models.CharField(blank=True, max_length=100, verbose_name='Ученая степень')),
                ('year_of_degree', models.IntegerField(blank=True, null=True, verbose_name='Год получения степени')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='Статус')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Звание')),
                ('fte', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Ставка')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Администратор')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PostAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок автора')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='main.post', verbose_name='Публикация')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_authors', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Автор публикации',
                'verbose_name_plural': 'Авторы публикаций',
                'ordering': ['order'],
                'unique_together': {('post', 'user')},
            },
        ),
    ]
